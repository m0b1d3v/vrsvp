import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {

	id 'application'
	id 'jacoco'

	id 'com.github.ben-manes.versions' version '0.52.0' // Dependency update checks
	id 'io.freefair.lombok' version '8.13.1' // Boilerplate reduction
	id 'io.sentry.jvm.gradle' version '5.3.0' // Exception monitoring
	id 'io.spring.dependency-management' version '1.1.7' // Transitive/exclusion dependency management
	id 'org.owasp.dependencycheck' version '12.1.0' // Dependency vulnerability checks
	id 'org.sonarqube' version '6.1.0.5360' // Source code analysis
	id 'org.springframework.boot' version '3.4.4' // Framework
}

group = 'dev.m0b1.vrsvp'
version = '1.10'
description = 'Virtual RSVP system for Discord-based communities.'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

application {
	mainClass = 'dev.m0b1.vrsvp.Main'
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.withType(JavaCompile).each {
	it.options.compilerArgs.add('--enable-preview')
}

dependencies {

	// Resource file inspections for editors
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

	// Disable template caching, automatic restart, live reload
	developmentOnly('org.springframework.boot:spring-boot-devtools')

	// Discord bot
	implementation("net.dv8tion:JDA:5.3.1") {
		exclude module: 'opus-java'
	}

	// Framework
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-web')

	// Testing
	testImplementation('org.springframework.boot:spring-boot-starter-test')

}

dependencyCheck {
	analyzers {
		assemblyEnabled = false
	}
}

test {

	jvmArgs(['--enable-preview'])

	useJUnitPlatform()

	finalizedBy jacocoTestReport

	testLogging {
		events = [
			TestLogEvent.PASSED,
			TestLogEvent.SKIPPED,
			TestLogEvent.FAILED,
		]
	}
}

jacocoTestReport {

	dependsOn test

	reports {
		xml.required = true
	}
}

sonarqube {
	properties {
		property('sonar.host.url', 'https://sonarcloud.io')
		property('sonar.organization', 'm0b1')
		property('sonar.projectKey', 'mobiusk_vrsvp')
		property('sonar.gradle.skipCompile', 'true')
	}
}
