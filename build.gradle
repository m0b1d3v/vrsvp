import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {

	id 'application'
	id 'jacoco'

	id 'com.github.ben-manes.versions' version '0.50.0'
	id 'io.freefair.lombok' version '8.4'
	id 'org.owasp.dependencycheck' version '9.0.2'
	id 'org.sonarqube' version '4.4.1.3373'
}

repositories {
	mavenCentral()
}

group = 'com.mobiusk.vrsvp'
version = '1.4'
description = 'Virtual RSVP system for Discord-based communities.'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

application {
	mainClass.set('com.mobiusk.vrsvp.Main')
}

dependencies {

	// Discord bot
	implementation("net.dv8tion:JDA:5.0.0-beta.18") {
		exclude module: 'opus-java'
	}

	// Logging
	implementation 'ch.qos.logback:logback-classic:1.4.11'

	// Used for JSON formatting of log messages
	// As of logback-classic:1.4.8 it includes a native JSON encoder, but it is not configurable for our purposes
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

	// Exception monitoring
	implementation 'io.sentry:sentry:7.0.0'

	// Unit tests
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
}

dependencyCheck {
	analyzers {
		assemblyEnabled = false
	}
}

test {

	useJUnitPlatform()

	finalizedBy jacocoTestReport

	testLogging {
		events = [
			TestLogEvent.PASSED,
			TestLogEvent.SKIPPED,
			TestLogEvent.FAILED,
		]
	}
}

jacocoTestReport {

	dependsOn test

	reports {
		xml.required = true
	}
}

sonarqube {
	properties {
		property('sonar.host.url', 'https://sonarcloud.io')
		property('sonar.organization', 'mobiusk')
		property('sonar.projectKey', 'mobiusk_vrsvp')
	}
}
